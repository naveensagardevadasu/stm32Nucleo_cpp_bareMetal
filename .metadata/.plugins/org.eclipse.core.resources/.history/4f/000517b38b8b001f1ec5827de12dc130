

#ifndef SERIAL_H_
#define SERIAL_H_

#include "stm32f446.h"
#include <string>

#define BAUD_9600 0x683


class Serial
{
public:
	Serial(USART_TYPEDEF* usart);
	void begin(uint32_t baud);
	void print(string str);
	void sendChar(uint8_t data);
private:
	USART_TYPEDEF* __usart__;
};

Serial::Serial(USART_TYPEDEF* usart):
		__usart__(usart)
{
	RCC->APB1ENR |= (1 << 17);
	RCC->AHB1ENR |= (1 << 0);

	GPIOA->MODER |= (2 << 4);
	GPIOA->MODER |= (2 << 6);
	GPIOA->OSPEEDR |= (3 << 4) | (3 << 6);
	GPIOA->AFR[0] |= (7 << 8);
	GPIOA->AFR[0] |= (7 << 12);
}

void Serial::begin(uint32_t baud)
{
	__usart__->CR1 = 0x00;
	__usart__->CR1 |= (1 << 13);
	__usart__->CR1 &= ~(1 << 12);
	__usart__->BRR = baud;
	__usart__->CR1 |= (1 << 2);
	__usart__->CR1 |= (1 << 3);
}

void Serial::sendChar(uint8_t data)
{
	__usart__->DR = data;
	while (!(__usart__->SR & (1<<6)));
	__usart__->SR &= ~(1 << 6);
}


#endif /* SERIAL_H_ */
